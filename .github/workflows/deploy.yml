name: Deploy to SSH Machine

on:
  push:
    branches:
      - production

  pull_request:
    branches:
      - production
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Remove existing files from the Web Frontend directory
      run: |
        sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "
          echo 'Removing old files...'
          sudo rm -rf /home/vijit/Web\ Frontend/*
        "

    - name: Copy new files to SSH machine
      run: |
        sshpass -p "${{ secrets.SSH_PASSWORD }}" rsync -avz --no-perms --omit-dir-times -e "ssh -o StrictHostKeyChecking=no" . ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/home/vijit/Web\ Frontend

    - name: Stop and remove existing container (if running)
      run: |
        sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "
          echo 'Checking for existing containers...'
          CONTAINER_ID=\$(sudo docker ps -aq --filter name=web-frontend-container)
          if [ ! -z \"\$CONTAINER_ID\" ]; then
            echo 'Stopping and removing existing container with ID: \$CONTAINER_ID'
            sudo docker stop \$CONTAINER_ID || true
            sudo docker rm -f \$CONTAINER_ID
          else
            echo 'No existing web-frontend-container found.'
          fi
        "

    - name: Free up port 5002 if in use
      run: |
        sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "
          echo 'Checking for processes using port 5002...'
          PID=\$(sudo lsof -t -i:5002)
          if [ ! -z \"\$PID\" ]; then
            echo 'Stopping process using port 5002: PID=\$PID'
            sudo kill -9 \$PID
          else
            echo 'No process found using port 5002.'
          fi
        "

    - name: Build Docker image
      run: |
        sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "
          echo 'Building Docker image...'
          cd /home/vijit/Web\ Frontend && sudo docker build . -t web-frontend
        "

    - name: Run new Docker container
      run: |
        sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "
          echo 'Starting new container...'
          sudo docker run -d -p 5002:3000 --restart=always --name web-frontend-container web-frontend
        "
